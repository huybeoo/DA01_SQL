--ex1
SELECT DISTINCT CITY FROM STATION 
WHERE ID % 2 =0;
--ex2
SELECT COUNT(CITY) - COUNT(DISTINCT CITY) AS COUNT FROM STATION
--ex3
SELECT CEIL(AVG(SALARY)- AVG(REPLACE(SALARY,'0',''))) AS ERRORS FROM EMPLOYEES; 
--ex4
SELECT ROUND(CAST(SUM(ITEM_COUNT * ORDER_OCCURRENCES)/SUM(ORDER_OCCURRENCES) AS DECIMAL),1) AS MEAN FROM items_per_order;
--ex5
SELECT CANDIDATE_ID FROM candidates
WHERE SKILL IN ('PYTHON','TABLEAU','POSTGRESQL')
GROUP BY CANDIDATE_ID
HAVING COUNT(SKILL)=3;
--ex6
SELECT USER_ID, DATE(MAX(POST_DATE)) - DATE(MIN(POST_DATE)) AS BW FROM posts
WHERE POST_DATE BETWEEN '2021-01-01' AND '2021-12-12'
GROUP BY USER_ID
HAVING COUNT(POST_ID) > 1;
--ex7
SELECT CARD_NAME,MAX(ISSUED_AMOUNT) - MIN(ISSUED_AMOUNT) AS DIFFERENCES FROM monthly_cards_issued
GROUP BY CARD_NAME
ORDER BY DIFFERENCES DESC;
--ex8
SELECT MANUFACTURER,COUNT(DRUG) AS DRUG_COUNT,SUM((COGS-TOTAL_SALES)) AS TOTALLOSS FROM pharmacy_sales
WHERE COGS > TOTAL_SALES
GROUP BY MANUFACTURER
ORDER BY TOTALLOSS DESC;
--ex9
SELECT ID , MOVIE , DESCRIPTION , RATING FROM CINEMA
WHERE DESCRIPTION != 'BORING'
HAVING ID % 2 != 0
ORDER BY RATING DESC
;
--ex10
SELECT TEACHER_ID , COUNT(DISTINCT(SUBJECT_ID)) AS CNT FROM TEACHER
GROUP BY TEACHER_ID 
--ex11
SELECT USER_ID , COUNT(DISTINCT(FOLLOWER_ID)) AS FOLLOWERS_COUNT FROM FOLLOWERS
GROUP BY USER_ID;
--ex12
SELECT CLASS FROM COURSES
GROUP BY CLASS
HAVING COUNT(DISTINCT(STUDENT)) > 4;
